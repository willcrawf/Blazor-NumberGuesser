@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <SfGrid AllowFiltering="true" AllowSorting="true" DataSource="@forecasts">
        <GridColumns>
            <GridColumn Field=@nameof(WeatherForecast.Date) Format="yMd" HeaderText="Date"></GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.TemperatureC) HeaderText="Temp. (C)"></GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.TemperatureF) HeaderText="Temp. (F)"></GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.Summary) HeaderText="Summary"></GridColumn>
        </GridColumns>
    </SfGrid>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
